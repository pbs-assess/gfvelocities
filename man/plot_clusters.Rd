% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-clusters.R
\name{plot_clusters}
\alias{plot_clusters}
\title{Plot clusters}
\usage{
plot_clusters(
  model,
  data = NULL,
  colour_vector = NULL,
  text_label = NULL,
  shape_by_group = FALSE,
  colour_label = "model",
  ...
)
}
\arguments{
\item{model}{An object of class "partition" created by the functions
[cluster::pam()] or [stats::kmeans()].}

\item{data}{The original data frame used in the clustering.}

\item{colour_vector}{A vector of character or factors to colour the points
by.}

\item{colour_label}{A label for the colour legend.}

\item{...}{Other arguments to pass2 [factoextra::fviz_cluster()].}
}
\value{
A ggplot2 object.
}
\description{
Plot clusters
}
\examples{
df <- haddock_mod \%>\%
  dplyr::select(fo_median, ffmsy_median, bbmsy_median) \%>\%
  scale()

# Evaluate the number of clusters
factoextra::fviz_nbclust(df, kmeans, method = "wss")
factoextra::fviz_nbclust(df, kmeans, method = "silhouette")
factoextra::fviz_nbclust(df, kmeans, method = "gap_stat")

# Illustrate an example with 2 clusters:
m <- kmeans(df, centers = 2L)

plot_clusters(m,
  data = df, colour_vector = haddock_mod$fmodel,
  colour_label = "F model"
)

# The default is to plot the two first principal components as x and y.
# Instead we can pick specific axes to show:
plot_clusters(m,
  data = df, colour_vector = haddock_mod$fmodel,
  colour_label = "F model",
  choose.vars = c("bbmsy_median", "ffmsy_median")
)

# Or with the more robust cluster::pam() algorithm:
m <- cluster::pam(df, k = 4L)
plot_clusters(m,
  data = df, colour_vector = haddock_mod$fmodel,
  colour_label = "F model"
)
}
